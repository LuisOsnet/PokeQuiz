%div{"data-controller" => "blur"}
  .bg-gray-800.w-full.h-screen.sm:grid.grid-cols-1.xl:grid-cols-2.gap-2
    .bg-black.p-16.lg:p-4.flex.justify-center.items-center
      %img{"data-blur-target" => "image", src: "#{@question[:pokemon_image_url]}", style: "filter: blur(20px);"}
    .text-center
      %main.py-6.flex.w-full.items-center.justify-center.bg-gray-800.lg:min-h-screen
        .text-center.flex.flex-col.items-center
          %h1.text-white.text-2xl.font-semibold.m-6.pb-4= @question[:question]
          = form_with url: game_quizzes_path, data: {blur_target: "form"}, method: :post, local: true do |form|
            .grid.grid-cols-2.gap-4
              - @question[:answer_options].each_with_index do |option, index|
                .flex.items-center
                  .inline-block.radio
                    = form.radio_button :user_answer, option, id: "option_#{index}", class: "hidden", required: true
                    %label.w-32.h-10.text-normal.sm:w-44.sm:h-12.sm:text-2xl.sm:font-bold.rounded-lg.flex.justify-center.items-center{for: "option_#{index}"}
                      = option
            = form.hidden_field :correct_answer, value: @question[:correct_answer]
            = form.hidden_field :question, value: @question[:question]
            .items-center.justify-center.grid.md:grid-cols-2.gap-2.mt-10
              = render ButtonGroup::Component.new(form: form, game_id: params["game_id"])


:css
  .radio input + label {
    background-color: rgb(233, 225, 225);
    color: rgb(158, 146, 146);
    transition: background-color 0.3s, color 0.3s;
  }

  .radio input:checked + label {
    background-color: rgb(70, 230, 22);
    color: white;
  }
